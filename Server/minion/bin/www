#!/usr/bin/env node

var http = require('http');
var debug = require('debug')('minion:server');
var app = require('../app');
var socket = require('../socket/ws');

var host = process.env.HOST || 'localhost';
var port = normalizePort(process.env.PORT || '3000');
var server = http.createServer(app, host);

app.set('port', port);
socket.attach(server);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port))
    return val;

  if (port >= 0)
    return port;

  return false;
}

function onError(error) {
  if (error.syscall !== 'listen')
    throw error;

  var bind = typeof port === 'string' ?
    'Pipe ' + port : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string' ?
    'pipe ' + addr : 'port ' + addr.port;
  debug('Listening on %s %s', host, port);
}
